---
title: "Lecture 11: Gaussian Process"
author: "Chun-Hao Yang"
footer: "[Home](https://chunhaoy.com/stat-5010/)"
format: 
    revealjs:
        theme: slides.scss
        chalkboard: true
        slide-number: true
        html-math-method: mathjax
        incremental: true
        scrollable: true
        include-in-header: 
            - text: 
                <link href='https://fonts.googleapis.com/css?family=Fira Code' rel='stylesheet'>
execute:
    echo: false
    warning: false
    cache: true
    freeze: true
---

## Non-, Semi-, and Parametric Models

{{< include macro.qmd >}}

-   What we have learned so far are called **parametric models**, i.e., models that are determined by a finite number of parameters.
-   **Nonparametric models** are models whose ``parameter'' is infinite dimensional.
-   Two common types of nonparametric models:
    +   **Nonparametric regression**: $Y = f(X) + \epsilon$, where $f$ is an unknown function.
    +   **Nonparametric density estimation**: $X_1, \ldots, X_n \iid F$, where $F$ is an unknown distribution (without assuming any parametric family).
-   **Semiparametric models** are models that have both parametric and nonparametric components, e.g., $Y = X^T\beta + f(Z) + \epsilon$.

## Bayesian Nonparametrics

-   For a nonparametric model, a Bayesian treats the unknown function/distribution as the parameter.
-   Therefore, we need prior distributions for these parameters.
-   We will introduce two "distributions" that are useful for nonparametric models:
    +   Gaussian process (GP, the "distribution" of random functions)
    +   Dirichlet process (DP, the "distribution" of random distributions)
-   That is,
    +   $Y = f(x) + \epsilon$, $f \sim \text{GP}$, $\epsilon \sim N(0, \sigma^2)$.
    +   $X_1, \ldots, X_n \sim F$, $F \sim \text{DP}$.
    
## Why nonparametrics?

## Parametric nonlinear model

# Gaussian Process

## Definition

A ``random function'' $f$ is said to follow a Gaussian process, denoted by 
$$
f \sim \mc{GP}(\mu, K),
$$
if for **any** $x_1, \ldots, x_n$, the random vector $(f(x_1), \ldots, f(x_n))$ has a multivariate normal distribution, i.e.,
$$
\left[\begin{array}{c}
f(x_1)\\
\vdots\\
f(x_n)
\end{array}\right] \sim N\left(\left[\begin{array}{c}
\mu(x_1)\\
\vdots\\
\mu(x_n),
\end{array}\right], \left[\begin{array}{ccc}
K(x_1, x_1) & \cdots & K(x_1, x_n)\\
\vdots & \ddots & \vdots\\
K(x_n, x_1) & \cdots & K(x_n, x_n)
\end{array}\right]\right).
$$

-   The parameter $\mu: \R \to \R$ is called the **mean function**.
-   The parameter $K: \R \times \R \to \R$ is called the **covariance function/operator** or **kernel**.
-   The kernel $K$ needs to be symmetric and positive definite, i.e, for any $x_1, \ldots, x_n \in \R$, the matrix above is symmetric and positive definite.

## Commonly used kernels

-   Notation: for $x, x^{\prime} \in \R^n$, $K(x, x^{\prime})$ is an $n \times n$ matrix whose $(i,j)$th entry is $K(x_i, x^{\prime}_j)$.

-   Linear kernel: $K(x, x^{\prime}) = x^Tx^{\prime}$.
-   Polynomial kernel: $K_{c,d}(x, x^{\prime}) = (x^Tx^{\prime} + c)^d$.
-   Gaussian kernel: $K_{\sigma}(x, x^{\prime}) = \exp\left(-\frac{\|x-x^{\prime}\|^2}{2\sigma^2}\right)$.

## Simulating Gaussian processes

```{r, fig.width = 10}
#| label: GP_sim
#| echo: true
library(mvtnorm)
GP_sim <- function(from = 0, to = 1, mean_func = function(x){0},
                   cov_func = function(x1, x2){exp(-16*(x1-x2)^2)}, 
                   m = 500){
    x <- seq(from, to, length.out = m)
    mu <- sapply(x, mean_func)
    Sigma <- outer(x, x, Vectorize(cov_func))
    y <- rmvnorm(1, mu, Sigma)
    return(list(x = x, y = y))
}
```

## Simulating Gaussian processes

```{r, fig.width = 10}
#| label: GP_sim_plot
#| fig-align: center
library(latex2exp)
set.seed(2023)
par(mfrow = c(1, 2))
plot(0, type = 'n', xlim = c(0, 1), ylim = c(-3, 3), 
     xlab = 'x', ylab = 'f(x)',
     main = TeX('$\\mu(x) = 0$, Gaussian kernel'))
abline(h = 0, lty = 2, lwd = 2)
for(i in 1:10){
    f <- GP_sim()
    lines(f$x, f$y, col = i)
}
plot(0, type = 'n', xlim = c(0, 1), ylim = c(-3, 3), 
     xlab = 'x', ylab = 'y',
     main = TeX('$\\mu(x) = 0$, $K(x_1, x_2) = \\min(x_1, x_2)$'))
abline(h = 0, lty = 2, lwd = 2)
for(i in 1:10){
    f <- GP_sim(cov_func = function(x1, x2){min(c(x1, x2))})
    lines(f$x, f$y, col = i)
}
```

## Gaussian Process Regression

-   Suppose we observe $\{x_i, y_i\}_{i=1}^n$, $x_i, y_i \in \R$.
-   Let $\mathbf{y} = [y_1, \ldots, y_n]^T$ and $\mathbf{x} = [x_1, \ldots, x_n]^T$.
-   Consider the model:
    \begin{align*}
    \mathbf{Y} \mid f, \mathbf{x}, \sigma^2 &\sim N(f(\mathbf{x}), \sigma^2I_n)\\
    f \mid \mu, K &\sim \mc{GP}(\mu, K).
    \end{align*}
-   The GP prior is equivalent to $f(\mathbf{x}) \mid \mathbf{x}, \mu, K \sim N(\mu(\mathbf{x}), K(\mathbf{x}, \mathbf{x}))$.
-   We need to compute two distributions:
    +   The posterior distribution of $f$ given $\mathbf{y}$ and $\mathbf{x}$.
    +   The posterior predictive distribution of $f(\mathbf{x}^{\prime})$ given $\mathbf{y}$ and $\mathbf{x}$.

    
    
## Posterior Predictive Distribution
-   The posterior distribution of $f$ is
    $$
    f \mid 
    $$

## Derivation

-   For any $m$ and $\mathbf{x}^{\prime} \in \R^m$,
    $$
    \left[\begin{array}{c}
    f(\mathbf{x})\\
    f(\mathbf{x}^{\prime})
    \end{array}
    \right] \sim N\left(\left[\begin{array}{c}
    \mu(\mathbf{x})\\
    \mu(\mathbf{x}^{\prime})
    \end{array}\right], \left[\begin{array}{cc}
    K(\mathbf{x}, \mathbf{x}) & K(\mathbf{x}, \mathbf{x}^{\prime})\\
    K(\mathbf{x}^{\prime}, \mathbf{x}) & K(\mathbf{x}^{\prime}, \mathbf{x}^{\prime})
    \end{array}\right]\right).
    $$

## Gaussian Process Regression

## Posterior

## Prediction

## Kernel



